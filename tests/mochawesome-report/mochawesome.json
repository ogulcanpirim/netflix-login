{
  "stats": {
    "suites": 5,
    "tests": 7,
    "passes": 5,
    "pending": 0,
    "failures": 2,
    "start": "2022-03-01T18:35:59.165Z",
    "end": "2022-03-01T18:36:32.551Z",
    "duration": 33386,
    "testsRegistered": 7,
    "passPercent": 71.42857142857143,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3cef1070-1cc3-4e63-a388-10426b39414a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fc8db1bf-3ca1-49da-a149-880e2c5318ed",
          "title": "TEST SUITE 1 (Credential Tests)",
          "fullFile": "C:\\Users\\moelh\\Desktop\\CS 458\\netflix-login\\tests\\test_case_1.js",
          "file": "\\test_case_1.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"TEST SUITE 1 (Credential Tests)\"",
              "fullTitle": "TEST SUITE 1 (Credential Tests) \"before each\" hook in \"TEST SUITE 1 (Credential Tests)\"",
              "timedOut": false,
              "duration": 1357,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await buildDriver();",
              "err": {},
              "uuid": "afe05c02-1b9b-4d44-b8e0-77167028aa94",
              "parentUUID": "fc8db1bf-3ca1-49da-a149-880e2c5318ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"TEST SUITE 1 (Credential Tests)\"",
              "fullTitle": "TEST SUITE 1 (Credential Tests) \"after each\" hook in \"TEST SUITE 1 (Credential Tests)\"",
              "timedOut": false,
              "duration": 127,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "9aa0a631-6aed-4a79-ba91-c1fe82a31450",
              "parentUUID": "fc8db1bf-3ca1-49da-a149-880e2c5318ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Verifies if the user can login with registered email and password.",
              "fullTitle": "TEST SUITE 1 (Credential Tests) Verifies if the user can login with registered email and password.",
              "timedOut": false,
              "duration": 3808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(BASE_URL);\nawait driver.wait(until.elementLocated(By.id(\"email-phone\")));\nawait driver.findElement(By.id(\"email-phone\")).sendKeys(\"elham@gmail.com\");\nawait driver.findElement(By.id(\"password\")).sendKeys(\"elham123\");\nawait driver.findElement(By.id(\"login-button\")).click();\nawait driver.wait(until.elementLocated(By.id(\"logout_button\")));\nconst title = await driver.getTitle();\nexpect(title).to.equal(\"Netflix Home\");",
              "err": {},
              "uuid": "bfea40e3-fb37-4237-ba73-59dae47f289f",
              "parentUUID": "fc8db1bf-3ca1-49da-a149-880e2c5318ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifies if user cannot login with unregistered email and password.",
              "fullTitle": "TEST SUITE 1 (Credential Tests) Verifies if user cannot login with unregistered email and password.",
              "timedOut": false,
              "duration": 2656,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(BASE_URL);\nawait driver.wait(until.elementLocated(By.id(\"email-phone\")));\nawait driver.findElement(By.id(\"email-phone\")).sendKeys(\"elham@hotmail.com\");\nawait driver.findElement(By.id(\"password\")).sendKeys(\"password123\");\nawait driver.findElement(By.id(\"login-button\")).click();\nawait driver.wait(until.elementLocated(By.id(\"message-container\")));\nlet errorMessage = await driver.findElement(By.id(\"message-container\")).getText();\nexpect(errorMessage).to.equal(\n  \"Bu e-posta adresi ile bağlantılı bir hesap bulamadık. Lütfen yeniden deneyin ya da yeni bir hesap oluşturun.\"\n);",
              "err": {},
              "uuid": "02ef6141-7d99-48db-bca6-dd9dcc002f5e",
              "parentUUID": "fc8db1bf-3ca1-49da-a149-880e2c5318ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bfea40e3-fb37-4237-ba73-59dae47f289f",
            "02ef6141-7d99-48db-bca6-dd9dcc002f5e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6464,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9d94a931-8899-4eaa-9f92-724dc9067d7e",
          "title": "TEST SUITE 2 (Remember Me Test)",
          "fullFile": "C:\\Users\\moelh\\Desktop\\CS 458\\netflix-login\\tests\\test_case_2.js",
          "file": "\\test_case_2.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"TEST SUITE 2 (Remember Me Test)\"",
              "fullTitle": "TEST SUITE 2 (Remember Me Test) \"before each\" hook in \"TEST SUITE 2 (Remember Me Test)\"",
              "timedOut": false,
              "duration": 1177,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await buildDriver();",
              "err": {},
              "uuid": "edf0667a-d7b7-40ce-8f31-58cb23aab194",
              "parentUUID": "9d94a931-8899-4eaa-9f92-724dc9067d7e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"TEST SUITE 2 (Remember Me Test)\"",
              "fullTitle": "TEST SUITE 2 (Remember Me Test) \"after each\" hook in \"TEST SUITE 2 (Remember Me Test)\"",
              "timedOut": false,
              "duration": 215,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "cd5cc2b1-2949-488c-8b25-98d1ce257908",
              "parentUUID": "9d94a931-8899-4eaa-9f92-724dc9067d7e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Verifies if the 'Remember Me' functionality keeps the user credentials after logout.",
              "fullTitle": "TEST SUITE 2 (Remember Me Test) Verifies if the 'Remember Me' functionality keeps the user credentials after logout.",
              "timedOut": false,
              "duration": 4491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Login with remember me enabled\nawait loginWithRememberMe(driver);\nawait driver.wait(until.elementLocated(By.id(\"logout_button\")));\n// Get local storage object\nconst localStorage = await driver.executeScript(`return localStorage`);\n// Logout and check remembered values\nawait logout(driver);\nawait driver.get(BASE_URL);\nawait driver.wait(until.elementLocated(By.id(\"email-phone\")));\nconst usernameValue = await driver.findElement(By.id(\"email-phone\")).getAttribute(\"value\");\nconst passwordValue = await driver.findElement(By.id(\"password\")).getAttribute(\"value\");\nexpect(usernameValue).to.equal(localStorage[\"Username\"]) && expect(passwordValue).to.equal(localStorage[\"Password\"]);",
              "err": {},
              "uuid": "fbb0c5c0-a8c6-42be-9179-f9a455dafebe",
              "parentUUID": "9d94a931-8899-4eaa-9f92-724dc9067d7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fbb0c5c0-a8c6-42be-9179-f9a455dafebe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4491,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4929822c-4b28-4ec5-813c-ceffe34ad548",
          "title": "TEST SUITE 3 (Login with Facebook Test)",
          "fullFile": "C:\\Users\\moelh\\Desktop\\CS 458\\netflix-login\\tests\\test_case_3.js",
          "file": "\\test_case_3.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"TEST SUITE 3 (Login with Facebook Test)\"",
              "fullTitle": "TEST SUITE 3 (Login with Facebook Test) \"before each\" hook in \"TEST SUITE 3 (Login with Facebook Test)\"",
              "timedOut": false,
              "duration": 1209,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await buildDriver();",
              "err": {},
              "uuid": "4f0736da-51a8-46db-9a1d-342eed02ea3c",
              "parentUUID": "4929822c-4b28-4ec5-813c-ceffe34ad548",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"TEST SUITE 3 (Login with Facebook Test)\"",
              "fullTitle": "TEST SUITE 3 (Login with Facebook Test) \"after each\" hook in \"TEST SUITE 3 (Login with Facebook Test)\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// await driver.quit();",
              "err": {},
              "uuid": "6cf63a94-5bfd-4c1a-88c0-e5c27d454f7e",
              "parentUUID": "4929822c-4b28-4ec5-813c-ceffe34ad548",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Verifies if the user can login with Facebook and is redirected to home page.",
              "fullTitle": "TEST SUITE 3 (Login with Facebook Test) Verifies if the user can login with Facebook and is redirected to home page.",
              "timedOut": false,
              "duration": 1415,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await driver.get(BASE_URL);\nawait driver.wait(until.elementLocated(By.id(\"login-fb-button\")));\nawait driver.findElement(By.id(\"login-fb-button\")).click();\nawait driver.quit();\n\n// await driver.wait(until.elementLocated(By.id(\"logout_button\")));\n// const title = await driver.getTitle();\n// const welcomeMessage = await driver.findElement(By.id(\"welcome-message\")).getText();\n// expect(title).to.equal('Netflix Home') && expect(welcomeMessage).to.equal(\"Welcome, logged with facebook !\")\nexpect(welcomeMessage).to.equal(\"Welcome, logged with facebook !\").to.equal(\"Welcome, logged with facebook !\");",
              "err": {
                "message": "ReferenceError: welcomeMessage is not defined",
                "estack": "ReferenceError: welcomeMessage is not defined\n    at Context.<anonymous> (test_case_3.js:28:12)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "27026eda-f2b4-4b69-a286-78d8fa1f4ad1",
              "parentUUID": "4929822c-4b28-4ec5-813c-ceffe34ad548",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "27026eda-f2b4-4b69-a286-78d8fa1f4ad1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1415,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0a7580cf-4479-4056-acf1-c0fbc3b686a0",
          "title": "TEST SUITE 4 (Error Messages Tests)",
          "fullFile": "C:\\Users\\moelh\\Desktop\\CS 458\\netflix-login\\tests\\test_case_4.js",
          "file": "\\test_case_4.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"TEST SUITE 4 (Error Messages Tests)\"",
              "fullTitle": "TEST SUITE 4 (Error Messages Tests) \"before all\" hook in \"TEST SUITE 4 (Error Messages Tests)\"",
              "timedOut": false,
              "duration": 1205,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();",
              "err": {},
              "uuid": "affa0a3e-afb6-4329-82a7-aabb8d2f132f",
              "parentUUID": "0a7580cf-4479-4056-acf1-c0fbc3b686a0",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"TEST SUITE 4 (Error Messages Tests)\"",
              "fullTitle": "TEST SUITE 4 (Error Messages Tests) \"before each\" hook in \"TEST SUITE 4 (Error Messages Tests)\"",
              "timedOut": false,
              "duration": 156,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(BASE_URL);",
              "err": {},
              "uuid": "ad05e079-a19b-429a-b842-6493a35469cf",
              "parentUUID": "0a7580cf-4479-4056-acf1-c0fbc3b686a0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"TEST SUITE 4 (Error Messages Tests)\"",
              "fullTitle": "TEST SUITE 4 (Error Messages Tests) \"after all\" hook in \"TEST SUITE 4 (Error Messages Tests)\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "9313fef4-dc2d-4e0f-8169-40b84432851e",
              "parentUUID": "0a7580cf-4479-4056-acf1-c0fbc3b686a0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check if invalid email form is entered.",
              "fullTitle": "TEST SUITE 4 (Error Messages Tests) Check if invalid email form is entered.",
              "timedOut": false,
              "duration": 1013,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.wait(until.elementLocated(By.id(\"email-phone\")));\nawait driver.findElement(By.id(\"email-phone\")).sendKeys(\"in\");\nawait driver.findElement(By.id(\"password\")).sendKeys(\"pass\");\nawait driver.findElement(By.id(\"login-button\")).click();\nawait driver.wait(until.elementLocated(By.id(\"email-error-message\")));\nlet errorMessage = await driver.findElement(By.id(\"email-error-message\")).getText();\nexpect(errorMessage).to.equal(\"Lütfen geçerli bir telefon numarası veya e-posta adresi girin.\");",
              "err": {},
              "uuid": "0d24f2b7-9bd0-46dc-bc6c-5c513a676db7",
              "parentUUID": "0a7580cf-4479-4056-acf1-c0fbc3b686a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check if a too short password is entered",
              "fullTitle": "TEST SUITE 4 (Error Messages Tests) Check if a too short password is entered",
              "timedOut": false,
              "duration": 297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.wait(until.elementLocated(By.id(\"password\")));\nawait driver.findElement(By.id(\"password\")).sendKeys(\"pas\");\nawait driver.findElement(By.id(\"login-button\")).click();\nlet errorMessage = await driver.findElement(By.id(\"wrongPassMsgContainer\")).getText();\nexpect(errorMessage).to.equal(\"Parola 4 ile 60 karakter olmalıdır.\");",
              "err": {},
              "uuid": "028329da-404a-403c-aca4-eec312857262",
              "parentUUID": "0a7580cf-4479-4056-acf1-c0fbc3b686a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d24f2b7-9bd0-46dc-bc6c-5c513a676db7",
            "028329da-404a-403c-aca4-eec312857262"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1310,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "656c8d9c-2c01-437e-a104-14e15c37867d",
          "title": "TEST SUITE 5 (Different Browsers Test)",
          "fullFile": "C:\\Users\\moelh\\Desktop\\CS 458\\netflix-login\\tests\\test_case_5.js",
          "file": "\\test_case_5.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"TEST SUITE 5 (Different Browsers Test)\"",
              "fullTitle": "TEST SUITE 5 (Different Browsers Test) \"before each\" hook in \"TEST SUITE 5 (Different Browsers Test)\"",
              "timedOut": false,
              "duration": 1429,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await buildDriver();",
              "err": {},
              "uuid": "8e7319ef-c079-45f7-869d-e2c975268b05",
              "parentUUID": "656c8d9c-2c01-437e-a104-14e15c37867d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"TEST SUITE 5 (Different Browsers Test)\"",
              "fullTitle": "TEST SUITE 5 (Different Browsers Test) \"after each\" hook in \"TEST SUITE 5 (Different Browsers Test)\"",
              "timedOut": false,
              "duration": 105,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "8f7e92e4-3e36-4ba6-9821-d7f38812425b",
              "parentUUID": "656c8d9c-2c01-437e-a104-14e15c37867d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Verifies if a user should be able to login with the same credentials in different browsers at the same time.",
              "fullTitle": "TEST SUITE 5 (Different Browsers Test) Verifies if a user should be able to login with the same credentials in different browsers at the same time.",
              "timedOut": true,
              "duration": 10003,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Login with chrome\nawait login(driver);\n// Login with firefox\nconst firefoxDriver = await new Builder().forBrowser(\"firefox\").build();\nawait login(firefoxDriver);\n// Check titles\nconst chromeTitle = await driver.getTitle();\nconst firefoxTitle = await firefoxDriver.getTitle();\nexpect(chromeTitle).to.equal(firefoxTitle).to.equal(\"Netflix Home\");\nfirefoxDriver.quit();",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\moelh\\Desktop\\CS 458\\netflix-login\\tests\\test_case_5.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\moelh\\Desktop\\CS 458\\netflix-login\\tests\\test_case_5.js)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
                "diff": null
              },
              "uuid": "3b1941d6-eb48-4003-996a-952c82ed7904",
              "parentUUID": "656c8d9c-2c01-437e-a104-14e15c37867d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3b1941d6-eb48-4003-996a-952c82ed7904"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10003,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}